[debug] [2025-10-09T20:15:08.319Z] ----------------------------------------------------------------------
[debug] [2025-10-09T20:15:08.322Z] Command:       /nix/store/ws50yvm6vzlzf7jzz6n7xh4szddrack1-nodejs-20.19.1/bin/node /nix/store/0yk9nzw3ibqkjc4dy03f3v9nf5rxqylc-firebase-tools-14.18.0/lib/node_modules/firebase-tools/lib/bin/firebase.js deploy --only firestore:rules --debug
[debug] [2025-10-09T20:15:08.323Z] CLI Version:   14.18.0
[debug] [2025-10-09T20:15:08.323Z] Platform:      linux
[debug] [2025-10-09T20:15:08.323Z] Node Version:  v20.19.1
[debug] [2025-10-09T20:15:08.323Z] Time:          Thu Oct 09 2025 20:15:08 GMT+0000 (Coordinated Universal Time)
[debug] [2025-10-09T20:15:08.324Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-10-09T20:15:08.808Z] No OAuth tokens found
[debug] [2025-10-09T20:15:08.810Z] No OAuth tokens found
[error] Failed to fetch Firebase Project from current Studio Workspace: Unable to refresh auth: not yet authenticated.
[debug] [2025-10-09T20:15:08.816Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:08.817Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:08.819Z] [iam] checking project voiceplan-h14be for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]
[debug] [2025-10-09T20:15:08.820Z] No OAuth tokens found
[debug] [2025-10-09T20:15:08.820Z] No OAuth tokens found
[debug] [2025-10-09T20:15:08.820Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:08.821Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:08.822Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/voiceplan-h14be:testIamPermissions [none]
[debug] [2025-10-09T20:15:08.823Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/voiceplan-h14be:testIamPermissions x-goog-quota-user=projects/voiceplan-h14be
[debug] [2025-10-09T20:15:08.823Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/voiceplan-h14be:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[debug] [2025-10-09T20:15:08.975Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/voiceplan-h14be:testIamPermissions 200
[debug] [2025-10-09T20:15:08.975Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/voiceplan-h14be:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[info] 
[info] === Deploying to 'voiceplan-h14be'...
[info] 
[info] i  deploying firestore 
[info] i  firestore: ensuring required API firestore.googleapis.com is enabled... 
[info] i  firestore: ensuring required API firestore.googleapis.com is enabled... 
[debug] [2025-10-09T20:15:08.982Z] No OAuth tokens found
[debug] [2025-10-09T20:15:08.982Z] No OAuth tokens found
[debug] [2025-10-09T20:15:08.982Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:08.982Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:08.983Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/voiceplan-h14be/databases/plannerai [none]
[debug] [2025-10-09T20:15:09.286Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/voiceplan-h14be/databases/plannerai 200
[debug] [2025-10-09T20:15:09.286Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/voiceplan-h14be/databases/plannerai {"name":"projects/voiceplan-h14be/databases/plannerai","uid":"b4fc3598-8c33-4f5f-94a1-2ca4de661856","createTime":"2025-09-10T23:42:22.256332Z","updateTime":"2025-09-10T23:42:22.256332Z","locationId":"nam5","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"604800s","earliestVersionTime":"2025-10-02T20:16:00Z","appEngineIntegrationMode":"DISABLED","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_ENABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"realtimeUpdatesMode":"REALTIME_UPDATES_ENABLED","etag":"IIamv6n3l5ADMPy4zfa04Y8D"}
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2025-10-09T20:15:09.291Z] No OAuth tokens found
[debug] [2025-10-09T20:15:09.291Z] No OAuth tokens found
[debug] [2025-10-09T20:15:09.292Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:09.292Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:09.292Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be:test [none]
[debug] [2025-10-09T20:15:09.294Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be:test [omitted]
[debug] [2025-10-09T20:15:09.636Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be:test 200
[debug] [2025-10-09T20:15:09.636Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be:test {}
[info] âœ”  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2025-10-09T20:15:09.648Z] No OAuth tokens found
[debug] [2025-10-09T20:15:09.648Z] No OAuth tokens found
[debug] [2025-10-09T20:15:09.650Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:09.650Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:09.651Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/releases pageSize=10&pageToken=
[debug] [2025-10-09T20:15:09.903Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/releases 200
[debug] [2025-10-09T20:15:09.903Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/releases {"releases":[{"name":"projects/voiceplan-h14be/releases/cloud.firestore","rulesetName":"projects/voiceplan-h14be/rulesets/94baec5e-ffcf-4a46-ba24-be80d3aa9c43","createTime":"2025-09-24T22:47:19.057230Z","updateTime":"2025-10-02T23:26:24.101616Z"},{"name":"projects/voiceplan-h14be/releases/cloud.firestore/plannerai","rulesetName":"projects/voiceplan-h14be/rulesets/20134b9d-034f-42ed-a9c6-0d78ec092471","createTime":"2025-09-10T23:42:24.111017Z","updateTime":"2025-10-09T20:11:32.189511Z"}]}
[debug] [2025-10-09T20:15:09.935Z] No OAuth tokens found
[debug] [2025-10-09T20:15:09.935Z] No OAuth tokens found
[debug] [2025-10-09T20:15:09.935Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:09.936Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:09.936Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets/94baec5e-ffcf-4a46-ba24-be80d3aa9c43 [none]
[debug] [2025-10-09T20:15:10.189Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets/94baec5e-ffcf-4a46-ba24-be80d3aa9c43 200
[debug] [2025-10-09T20:15:10.190Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets/94baec5e-ffcf-4a46-ba24-be80d3aa9c43 [omitted]
[info] i  firestore: uploading rules firestore.rules... 
[debug] [2025-10-09T20:15:10.194Z] No OAuth tokens found
[debug] [2025-10-09T20:15:10.195Z] No OAuth tokens found
[debug] [2025-10-09T20:15:10.195Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:10.198Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:10.198Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets [none]
[debug] [2025-10-09T20:15:10.198Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets [omitted]
[debug] [2025-10-09T20:15:10.565Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets 200
[debug] [2025-10-09T20:15:10.566Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/rulesets {"name":"projects/voiceplan-h14be/rulesets/7bf21138-f08c-415c-ad3c-0f15e99b817b","source":{"files":[{"content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    match /users/{userId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if false;\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    match /users/{userId}/plans/{planId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId) && resource.data.userId == userId;\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    // --- Start of Fix ---\n    /**\n     * @description Grants access to itineraries belonging to a specific user.\n     * @path /users/{userId}/itineraries/{itineraryId}\n     * @allow (get, create, update, delete, list) if the user is signed in and owns the data.\n     * @principle Enforces document ownership for itineraries.\n     */\n    match /users/{userId}/itineraries/{itineraryId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId) && resource.data.userId == userId;\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n    // --- End of Fix ---\n\n    match /users/{userId}/plans/{planId}/tasks/{taskId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    match /users/{userId}/plans/{planId}/tasks/{taskId}/reminders/{reminderId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    match /users/{userId}/plans/{planId}/people/{personId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    match /users/{userId}/plans/{planId}/organizations/{organizationId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    match /users/{userId}/plans/{planId}/locations/{locationId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n\n    match /users/{userId}/fcmTokens/{tokenId} {\n      allow get: if isSignedIn() && isOwner(userId);\n      allow list: if isSignedIn() && isOwner(userId);\n      allow create: if isSignedIn() && isOwner(userId);\n      allow update: if isSignedIn() && isExistingOwner(userId);\n      allow delete: if isSignedIn() && isExistingOwner(userId);\n    }\n  }\n\n  // Helper Functions\n  function isSignedIn() {\n    return request.auth != null;\n  }\n\n  function isOwner(userId) {\n    return request.auth.uid == userId;\n  }\n\n  function isExistingOwner(userId) {\n    return isSignedIn() && isOwner(userId) && resource != null;\n  }\n}","name":"firestore.rules"}]},"createTime":"2025-10-09T20:15:10.532607Z","metadata":{"services":["cloud.firestore"]}}
[debug] [2025-10-09T20:15:10.567Z] [rules] created ruleset projects/voiceplan-h14be/rulesets/7bf21138-f08c-415c-ad3c-0f15e99b817b
[debug] [2025-10-09T20:15:10.571Z] [rules] releasing cloud.firestore/plannerai with ruleset projects/voiceplan-h14be/rulesets/7bf21138-f08c-415c-ad3c-0f15e99b817b
[debug] [2025-10-09T20:15:10.572Z] No OAuth tokens found
[debug] [2025-10-09T20:15:10.578Z] No OAuth tokens found
[debug] [2025-10-09T20:15:10.578Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/userinfo.email"]
[debug] [2025-10-09T20:15:10.578Z] > authorizing via signed-in user (numairx120@gmail.com)
[debug] [2025-10-09T20:15:10.581Z] >>> [apiv2][query] PATCH https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/releases/cloud.firestore/plannerai [none]
[debug] [2025-10-09T20:15:10.581Z] >>> [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/releases/cloud.firestore/plannerai {"release":{"name":"projects/voiceplan-h14be/releases/cloud.firestore/plannerai","rulesetName":"projects/voiceplan-h14be/rulesets/7bf21138-f08c-415c-ad3c-0f15e99b817b"}}
[debug] [2025-10-09T20:15:10.761Z] <<< [apiv2][status] PATCH https://firebaserules.googleapis.com/v1/projects/voiceplan-h14be/releases/cloud.firestore/plannerai 200
